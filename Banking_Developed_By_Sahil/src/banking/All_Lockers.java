/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package banking;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import javax.swing.*;
import java.sql.*;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Sahil
 */
public class All_Lockers extends javax.swing.JInternalFrame implements myvariables
{

    /**
     * Creates new form mini_statement
     */
    public All_Lockers() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("All_Lockers");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Locker_No", "Account_No", "Customer_Name", "Date_Of_Issue"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Locker_No");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Locker_Status");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose", "Available", "Occupied" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(122, 122, 122)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)))
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
         
        if(jTextField1.getText().equals(""))
        {
        JOptionPane.showMessageDialog(rootPane,"Please fill Locker_No .");
        }
        else
        {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
            {
                String q = "select * from locker_table where locker_no = ? ";
                
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                mystatement.setString(1,jTextField1.getText());
               
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
              
                String locker_no = "",account_no="",doi = "",customer_name = "";
                
                if(myresult.next())
                {
                  
                     do  
                    {    
                        
                         locker_no = myresult.getString("locker_no");
                         account_no = myresult.getString("account_no");
                         doi = myresult.getString("issue_date");

                  
                    
                

                       String q2 = "select * from customer_table where account_no = ? ";

                        PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                        mystatement2.setString(1,account_no);

                        ResultSet myresult2 = mystatement2.executeQuery();

                        if(myresult2.next())
                        {
                            customer_name = myresult2.getString("customer_name");
                        }


                        if(account_no != null)
                        {               
                        mymodel.addRow(new Object[] {locker_no,account_no,customer_name,doi});
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane," Locker Not Occupied .");
                        }
                        
                        }
                     while(myresult.next());
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane," No Records Found .");
                }
       
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Query , "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
            
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection , "+e.getMessage());
        }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

             
         
        if(jComboBox1.getSelectedItem().toString().equals("Choose"))
        {
        JOptionPane.showMessageDialog(rootPane,"Please Choose Locker_Status .");
        }
        else
        {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
            {
                String q = "select * from locker_table where status = ?";
                
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                mystatement.setString(1,jComboBox1.getSelectedItem().toString());
               
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
              
                String locker_no = "",account_no="",doi = "",customer_name = "";
                
                if(myresult.next())
                {
                  
                     do  
                    {    
                        
                         locker_no = myresult.getString("locker_no");
                         account_no = myresult.getString("account_no");
                         doi = myresult.getString("issue_date");
                        
                  
                    
                

                        String q2 = "select * from customer_table where account_no = ? ";

                        PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                        mystatement2.setString(1,account_no);

                        ResultSet myresult2 = mystatement2.executeQuery();

                        if(myresult2.next())
                        {
                            customer_name = myresult2.getString("customer_name");
                        }




                        mymodel.addRow(new Object[] {locker_no,account_no,customer_name,doi});
                        
                        }
                        while(myresult.next());
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane," No Records Found .");
                }
       
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Query , "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
            
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection , "+e.getMessage());
        }
        }
        
        
        
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
