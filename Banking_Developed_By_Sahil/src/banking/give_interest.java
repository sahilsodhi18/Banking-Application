/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package banking;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Sahil
 */
public class give_interest extends javax.swing.JInternalFrame implements myvariables
{

    /**
     * Creates new form last_transactions
     */
    public give_interest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jComboBox1 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Add_Interest_To_Accounts");
        setToolTipText("");
        setMinimumSize(new java.awt.Dimension(1200, 600));
        setPreferredSize(new java.awt.Dimension(1200, 600));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Add Interest To Accounts");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Account No", "Customer Name", "Current Amount", "Interest Rate ( % )", "Account Type"
            }
        ));
        jTable1.setMinimumSize(new java.awt.Dimension(1200, 700));
        jTable1.setPreferredSize(new java.awt.Dimension(1200, 100));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Account Type :-");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText(" Date :-");

        jButton2.setText("search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("     |");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose", "Saving", "Fixed_Deposit", "Recurrence_Deposit" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton3.setText("Add Interest");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("One Month Before");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Add Interest");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jLabel4)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jButton2))
                    .addComponent(jButton1))
                .addGap(238, 238, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(481, 481, 481)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(253, 253, 253))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButton2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    
        if(jDateChooser1.getDate().toString().equals("")  /*|| jDateChooser2.getDate().toString().equals("")*/ || jComboBox1.getSelectedItem().toString().equals("Choose"))
        {
        JOptionPane.showMessageDialog(rootPane,"Please Choose both Account_Type and Dates.");
        }
        else
        {
               
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
            {
                if(jComboBox1.getSelectedItem().toString().equals("Saving"))
                {
                String q = "select * from customer_table where account_type = ? and ( date = ? ) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                String dt = myformat.format(jDateChooser1.getDate());
                
//                String d2 = myformat.format(jDateChooser2.getDate());    
                
                mystatement.setString(1,"Saving");
               // mystatement.setString(2,dt);
                
                mystatement.setString(2,dt);
              //  mystatement.setString(3,d2);
                mystatement.setString(3,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                        if(myresult.next())
                        {
                            do
                            {
                                String date = myresult.getString("date");
                                String acc_no = myresult.getString("account_no");
                                String c_name = myresult.getString("customer_name");
                                String t_amt = myresult.getString("total_amount");
                                Double i_rate = myresult.getDouble("interest");
                                String acc_type = myresult.getString("account_type");


                                mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});

                            }
                            while(myresult.next());
                        }

                        else
                        {
                            JOptionPane.showMessageDialog(rootPane," No Records Found .");
                        }
               
                }
                
               else if(jComboBox1.getSelectedItem().toString().equals("Fixed_Deposit"))
                {
                String q = "select * from fd_table where account_type = ? and ( date = ?) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                String dt = myformat.format(jDateChooser1.getDate());
                
//                String d2 = myformat.format(jDateChooser2.getDate());    
                
                mystatement.setString(1,"Fixed_deposit");
               // mystatement.setString(2,dt);
                
                mystatement.setString(2,dt);
             //   mystatement.setString(3,d2);
                mystatement.setString(3,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                        if(myresult.next())
                        {
                            do
                            {
                                String date = myresult.getString("date");
                                String acc_no = myresult.getString("account_no");
                                String c_name = myresult.getString("customer_name");
                                String t_amt = myresult.getString("amount");
                                Double i_rate = myresult.getDouble("interest");
                                String acc_type = myresult.getString("account_type");


                                mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});

                            }
                            while(myresult.next());
                        }

                        else
                        {
                            JOptionPane.showMessageDialog(rootPane," No Records Found .");
                        }
               
                }
                
               else if(jComboBox1.getSelectedItem().toString().equals("Recurrence_Deposit"))
                {
                String q = "select * from rd_table where account_type = ? and ( date = ? ) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                String dt = myformat.format(jDateChooser1.getDate());
                
             //   String d2 = myformat.format(jDateChooser2.getDate());    
                
                mystatement.setString(1,"Recurrence_Deposit");
               // mystatement.setString(2,dt);
                
                mystatement.setString(2,dt);
            //    mystatement.setString(3,d2);
                mystatement.setString(3,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                        if(myresult.next())
                        {
                            do
                            {
                                String date = myresult.getString("date");
                                String acc_no = myresult.getString("account_no");
                                String c_name = myresult.getString("customer_name");
                                String t_amt = myresult.getString("amount");
                                Double i_rate = myresult.getDouble("interest");
                                String acc_type = myresult.getString("account_type");


                                mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});

                            }
                            while(myresult.next());
                        }

                        else
                        {
                            JOptionPane.showMessageDialog(rootPane," No Records Found .");
                        }
               
                }
        
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Query , "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
            
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection , "+e.getMessage());
        }
        }
       
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        
        
        
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if(jComboBox1.getSelectedItem().toString().equals("Choose"))
        {
        JOptionPane.showMessageDialog(rootPane,"Please choose Account Type .");
        }
        else
        {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
            {
                if(jComboBox1.getSelectedItem().toString().equals("Saving"))
                {
                String q = "select * from customer_table where account_type = ? and DATE = SUBDATE(CURDATE(), INTERVAL 1 MONTH) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                java.util.Date cdate = new java.util.Date();
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                
                String dt = myformat.format(cdate);
               
                mystatement.setString(1,"Saving");
               // mystatement.setString(2,dt);
                mystatement.setString(2,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                if(myresult.next())
                {
                    do
                    {
                        String date = myresult.getString("date");
                        String acc_no = myresult.getString("account_no");
                        String c_name = myresult.getString("customer_name");
                        String t_amt = myresult.getString("total_amount");
                        Double i_rate = myresult.getDouble("interest");
                        String acc_type = myresult.getString("account_type");
                       
                       
                        mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});
                       
                    }
                    while(myresult.next());
                }
                
                else
                {
                    JOptionPane.showMessageDialog(rootPane," No Records Found .");
                }
                }
                
                else if(jComboBox1.getSelectedItem().toString().equals("Fixed_Deposit"))
                {
                String q = "select * from fd_table where account_type = ? and DATE = SUBDATE(CURDATE(), INTERVAL 1 MONTH) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                java.util.Date cdate = new java.util.Date();
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                
                String dt = myformat.format(cdate);
               
                mystatement.setString(1,"Fixed_Deposit");
                //mystatement.setString(2,dt);
                mystatement.setString(2,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                if(myresult.next())
                {
                    do
                    {
                        String date = myresult.getString("date");
                        String acc_no = myresult.getString("account_no");
                        String c_name = myresult.getString("customer_name");
                        String t_amt = myresult.getString("amount");
                        Double i_rate = myresult.getDouble("interest");
                        String acc_type = myresult.getString("account_type");
                       
                       
                        mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});
                       
                    }
                    while(myresult.next());
                }
                
                else
                {
                    JOptionPane.showMessageDialog(rootPane," No Records Found .");
                }
                }
                
                else if(jComboBox1.getSelectedItem().toString().equals("Recurrence_Deposit"))
                {
                String q = "select * from rd_table where account_type = ? and DATE = SUBDATE(CURDATE(), INTERVAL 1 MONTH) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                java.util.Date cdate = new java.util.Date();
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                
                String dt = myformat.format(cdate);
               
                mystatement.setString(1,"Recurrence_Deposit");
                
                mystatement.setString(2,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                if(myresult.next())
                {
                    do
                    {
                        String date = myresult.getString("date");
                        String acc_no = myresult.getString("account_no");
                        String c_name = myresult.getString("customer_name");
                        String t_amt = myresult.getString("amount");
                        Double i_rate = myresult.getDouble("interest");
                        String acc_type = myresult.getString("account_type");
                       
                       
                        mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});
                       
                    }
                    while(myresult.next());
                }
                
                else
                {
                    JOptionPane.showMessageDialog(rootPane," No Records Found .");
                }
                }
               
                
                
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Query , "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
            
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection , "+e.getMessage());
        }
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    
       
       
         if(jComboBox1.getSelectedItem().toString().equals("Choose"))
        {
        JOptionPane.showMessageDialog(rootPane,"Please choose Account Type .");
        }
     
        else
        {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
            {
                
                        java.util.Date cdate7 = new java.util.Date();
                        SimpleDateFormat myformat7 = new SimpleDateFormat("yyyy-MM-dd");

                        String dt7 = myformat7.format(cdate7);
                    
                    String ch = "select * from admin_work_sheet where date  = ?";
                    PreparedStatement mystatementch = myconnection.prepareStatement(ch);
                    mystatementch.setString(1,dt7);
                    
                    ResultSet myresultch = mystatementch.executeQuery();
                    
                    
                    String s = "" , f = "",r="";
                    if(myresultch.next())
                    {
                        s = myresultch.getString("saving");
                        f = myresultch.getString("fd");
                        r = myresultch.getString("rd");
                    }
                
                
                
                
                if(jComboBox1.getSelectedItem().toString().equals("Saving") && s.equals("Pending") )
                {
                String q = "select * from customer_table where account_type = ? and DATE = SUBDATE(CURDATE(), INTERVAL 1 MONTH) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                java.util.Date cdate = new java.util.Date();
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                String dt = myformat.format(cdate);
               
                mystatement.setString(1,"Saving");
         
                mystatement.setString(2,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                double t_amt = 0 , int_amt = 0;
                
                if(myresult.next())
                {
                    do
                    {
                        String date = myresult.getString("date");
                        String acc_no = myresult.getString("account_no");
                        String c_name = myresult.getString("customer_name");
                        t_amt = myresult.getDouble("total_amount");
                        Double i_rate = myresult.getDouble("interest");
                        
                        int_amt =  t_amt * (i_rate/100)  ;
                        
                        t_amt = t_amt + int_amt;
                        
                        String q2 = "update customer_table set total_amount = ? where account_no = ?";
                        PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                        mystatement2.setString(1, String.valueOf(t_amt));
                        mystatement2.setString(2, acc_no);
                        
                        mystatement2.executeUpdate();
                        
                        String q3 = "update admin_work_sheet set saving = ? where date = ?";
                        
                        PreparedStatement mystatement3 = myconnection.prepareStatement(q3);
                        
                        mystatement3.setString(1,"Done");
                        mystatement3.setString(2,dt);
                        
                        mystatement3.executeUpdate();
                        
                        String q4="insert into account_records(`src_acc_no`, `trans`, `trans_amount`, `trans_med`, `trans_med_details`, `tar_acc_no`, `current_balance`, `date`) values(?,?,?,?,?,?,?,?)";
                
                
                        PreparedStatement mystatement4=myconnection.prepareStatement(q4);

                        mystatement4.setString(1,acc_no);
                        mystatement4.setString(2,"Saving_Interest");
                        mystatement4.setString(3,String.valueOf(int_amt) );
                        mystatement4.setString(4,"-");


                        mystatement4.setString(5,"-");
                        mystatement4.setString(6,"-" );
                        mystatement4.setString(7,String.valueOf(t_amt));

                        java.util.Date cd=new java.util.Date();
                        SimpleDateFormat myf=new SimpleDateFormat("yyyy-MM-dd");
                        String cdate1=myf.format(cd);

                        mystatement4.setString(8,cdate1);

                        mystatement4.executeUpdate();
       
                        
                        String acc_type = myresult.getString("account_type");
                       
                       
                        mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});
                       
                    }
                    while(myresult.next());
                
                    JOptionPane.showMessageDialog(rootPane,"Interest Added Successfully to all Saving Accounts .");
                }
                
                else
                {
                    JOptionPane.showMessageDialog(rootPane," No Record Found .");
                }
                }
                
                else if(jComboBox1.getSelectedItem().toString().equals("Fixed_Deposit") && !f.equals("Done"))
                {
                String q = "select * from fd_table where account_type = ? and DATE = SUBDATE(CURDATE(), INTERVAL 1 MONTH) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                java.util.Date cdate = new java.util.Date();
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                String dt = myformat.format(cdate);
               
                mystatement.setString(1,"Fixed_Deposit");
                //mystatement.setString(2,dt);
                mystatement.setString(2,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                double t_amt = 0 , int_amt = 0;
                
                if(myresult.next())
                {
                    do
                    {
                        String date = myresult.getString("date");
                        String acc_no = myresult.getString("account_no");
                        String c_name = myresult.getString("customer_name");
                                t_amt = myresult.getDouble("amount");
                        Double i_rate = myresult.getDouble("interest");
                        
                        
                        int_amt = t_amt * (i_rate/100) ;
                        
                        t_amt = t_amt + int_amt ;
                        
                        String q2 = "update fd_table set amount = ? where account_no = ?";
                        
                        PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                        mystatement2.setString(1, String.valueOf(t_amt));
                        mystatement2.setString(2, acc_no);
                        
                        mystatement2.executeUpdate();
                        
                        String q3 = "update admin_work_sheet set fd = ? where date = ?";
                        
                        PreparedStatement mystatement3 = myconnection.prepareStatement(q3);
                        
                        mystatement3.setString(1,"Done");
                        mystatement3.setString(2,dt);
                        
                        mystatement3.executeUpdate();
                        
                        String q4="insert into account_records(`src_acc_no`, `trans`, `trans_amount`, `trans_med`, `trans_med_details`, `tar_acc_no`, `current_balance`, `date`) values(?,?,?,?,?,?,?,?)";
                
                
                        PreparedStatement mystatement4=myconnection.prepareStatement(q4);

                        mystatement4.setString(1,acc_no);
                        mystatement4.setString(2,"Fixed_Deposit_Interest");
                        mystatement4.setString(3,String.valueOf(int_amt) );
                        mystatement4.setString(4,"-");


                        mystatement4.setString(5,"-");
                        mystatement4.setString(6,"-" );
                        mystatement4.setString(7,String.valueOf(t_amt));

                        java.util.Date cd=new java.util.Date();
                        SimpleDateFormat myf=new SimpleDateFormat("yyyy-MM-dd");
                        String cdate1=myf.format(cd);

                        mystatement4.setString(8,cdate1);

                        mystatement4.executeUpdate();
       
                        
                        
                        String acc_type = myresult.getString("account_type");
                       
                       
                        mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});
                       
                    }
                    while(myresult.next());
                    
                    JOptionPane.showMessageDialog(rootPane,"Interest Added Successfully to all Fixed_Deposit Accounts .");
                }
                
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"No Records Found.");
                }
                }
                
                else if(jComboBox1.getSelectedItem().toString().equals("Recurrence_Deposit") && !r.equals("Done"))
                {
                String q = "select * from rd_table where account_type = ? and DATE = SUBDATE(CURDATE(), INTERVAL 1 MONTH) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                java.util.Date cdate = new java.util.Date();
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                
                String dt = myformat.format(cdate);
               
                mystatement.setString(1,"Recurrence_Deposit");
                
                mystatement.setString(2,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                double t_amt = 0 ,int_amt = 0;
                if(myresult.next())
                {
                    do
                    {
                        String date = myresult.getString("date");
                        String acc_no = myresult.getString("account_no");
                        String c_name = myresult.getString("customer_name");
                         t_amt = myresult.getDouble("amount");
                        Double i_rate = myresult.getDouble("interest");
                       
                         int_amt = t_amt * (i_rate/100) ;
                        
                        t_amt = t_amt + int_amt ;
                        
                        String q2 = "update rd_table set amount = ? where account_no = ?";
                        PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                        mystatement2.setString(1, String.valueOf(t_amt));
                        mystatement2.setString(2, acc_no);
                        
                        mystatement2.executeUpdate();
                        
                        
                        String q3 = "update admin_work_sheet set rd = ? where date = ?";
                        
                        PreparedStatement mystatement3 = myconnection.prepareStatement(q3);
                        
                        mystatement3.setString(1,"Done");
                        mystatement3.setString(2,dt);
                        
                        mystatement3.executeUpdate();
                        
                        String q4="insert into account_records(`src_acc_no`, `trans`, `trans_amount`, `trans_med`, `trans_med_details`, `tar_acc_no`, `current_balance`, `date`) values(?,?,?,?,?,?,?,?)";
                
                
                        PreparedStatement mystatement4=myconnection.prepareStatement(q4);

                        mystatement4.setString(1,acc_no);
                        mystatement4.setString(2,"Recurrence_Deposit_Interest");
                        mystatement4.setString(3,String.valueOf(int_amt) );
                        mystatement4.setString(4,"-");


                        mystatement4.setString(5,"-");
                        mystatement4.setString(6,"-" );
                        mystatement4.setString(7,String.valueOf(t_amt));

                        java.util.Date cd=new java.util.Date();
                        SimpleDateFormat myf=new SimpleDateFormat("yyyy-MM-dd");
                        String cdate1=myf.format(cd);

                        mystatement4.setString(8,cdate1);

                        mystatement4.executeUpdate();
       
                        
                        
                        String acc_type = myresult.getString("account_type");
                       
                       
                        mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});
                       
                    }
                    while(myresult.next());
                
                    JOptionPane.showMessageDialog(rootPane,"Interest Added Successfully to all Recurrence_Deposit Accounts .");
                }
                
                
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"No Record Found .");
                }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Interest has already added to Accounts .");
                
                }
               
                
                
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Query , "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
            
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection , "+e.getMessage());
        }
        }
 
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        if(jComboBox1.getSelectedItem().toString().equals("Choose") || jDateChooser1.getDate() == null /*|| jDateChooser2.getDate() == null*/)
        {
        JOptionPane.showMessageDialog(rootPane,"Please choose Account Type and Dates .");
        }
        else
        {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
            {
                        java.util.Date cdate7 = new java.util.Date();
                        SimpleDateFormat myformat7 = new SimpleDateFormat("yyyy-MM-dd");

                        String dt7 = myformat7.format(jDateChooser1.getDate());
                    
                    String ch = "select * from admin_work_sheet where date  =  ADDDATE('"+dt7+"',INTERVAL 1 MONTH)";
                    PreparedStatement mystatementch = myconnection.prepareStatement(ch);
                  
                    
                    ResultSet myresultch = mystatementch.executeQuery();
                    
                    
                    String s = "" , f = "",r="";
                    if(myresultch.next())
                    {
                        s = myresultch.getString("saving");
                        f = myresultch.getString("fd");
                        r = myresultch.getString("rd");
                    }
                
                
                if(jComboBox1.getSelectedItem().toString().equals("Saving") && s.equals("Pending"))
                {
                String q = "select * from customer_table where account_type = ? and ( date = ? ) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                java.util.Date cdate = new java.util.Date();
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                String dt = myformat.format(cdate);
                String dt1 = myformat.format(jDateChooser1.getDate());
//                String dt2 = myformat.format(jDateChooser2.getDate());
               
                mystatement.setString(1,"Saving");
                mystatement.setString(2,dt1);
         //       mystatement.setString(3,dt2);
                mystatement.setString(3,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                double t_amt = 0 , int_amt = 0;
                
                if(myresult.next())
                {
                    do
                    {
                        String date = myresult.getString("date");
                        String acc_no = myresult.getString("account_no");
                        String c_name = myresult.getString("customer_name");
                        t_amt = myresult.getDouble("total_amount");
                        Double i_rate = myresult.getDouble("interest");
                        
                        int_amt =  t_amt * (i_rate/100)  ;
                        
                        t_amt = t_amt + int_amt;
                        
                        String q2 = "update customer_table set total_amount = ? where account_no = ?";
                        PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                        mystatement2.setString(1, String.valueOf(t_amt));
                        mystatement2.setString(2, acc_no);
                        
                        mystatement2.executeUpdate();
                        
                        String q3 = "update admin_work_sheet set saving = ? where date = ADDDATE('"+dt7+"',INTERVAL 1 MONTH)";
                        
                        PreparedStatement mystatement3 = myconnection.prepareStatement(q3);
                        
                        mystatement3.setString(1,"Done");
                       // mystatement3.setString(2,dt7);
                        
                        mystatement3.executeUpdate();
                        
                        String q4="insert into account_records(`src_acc_no`, `trans`, `trans_amount`, `trans_med`, `trans_med_details`, `tar_acc_no`, `current_balance`, `date`) values(?,?,?,?,?,?,?,?)";
                
                
                        PreparedStatement mystatement4=myconnection.prepareStatement(q4);

                        mystatement4.setString(1,acc_no);
                        mystatement4.setString(2,"Saving_Interest");
                        mystatement4.setString(3,String.valueOf(int_amt) );
                        mystatement4.setString(4,"-");


                        mystatement4.setString(5,"-");
                        mystatement4.setString(6,"-" );
                        mystatement4.setString(7,String.valueOf(t_amt));

                        java.util.Date cd=new java.util.Date();
                        SimpleDateFormat myf=new SimpleDateFormat("yyyy-MM-dd");
                        String cdate1=myf.format(cd);

                        mystatement4.setString(8,cdate1);

                        mystatement4.executeUpdate();
       
                        
                        String acc_type = myresult.getString("account_type");
                       
                       
                        mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});
                       
                    }
                    while(myresult.next());
                
                    JOptionPane.showMessageDialog(rootPane,"Interest Added Successfully to all Saving Accounts .");
                }
                
                else
                {
                    JOptionPane.showMessageDialog(rootPane," No Records Found .");
                }
                }
                
                else if(jComboBox1.getSelectedItem().toString().equals("Fixed_Deposit") && f.equals("Pending"))
                {
                String q = "select * from fd_table where account_type = ? and (date = ?) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                java.util.Date cdate = new java.util.Date();
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                String dt = myformat.format(cdate);
               String dt1 = myformat.format(jDateChooser1.getDate());
//                String dt2 = myformat.format(jDateChooser2.getDate());
               
                mystatement.setString(1,"Fixed_Deposit");
                mystatement.setString(2,dt1);
            //    mystatement.setString(3,dt2);
                mystatement.setString(3,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                double t_amt = 0 , int_amt = 0;
                
                if(myresult.next())
                {
                    do
                    {
                        String date = myresult.getString("date");
                        String acc_no = myresult.getString("account_no");
                        String c_name = myresult.getString("customer_name");
                                t_amt = myresult.getDouble("amount");
                        Double i_rate = myresult.getDouble("interest");
                        
                        
                        int_amt = t_amt * (i_rate/100) ;
                        
                        t_amt = t_amt + int_amt ;
                        
                        String q2 = "update fd_table set amount = ? where account_no = ?";
                        
                        PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                        mystatement2.setString(1, String.valueOf(t_amt));
                        mystatement2.setString(2, acc_no);
                        
                        mystatement2.executeUpdate();
                        
                        String q3 = "update admin_work_sheet set fd = ? where date =  ADDDATE('"+dt7+"',INTERVAL 1 MONTH)";
                        
                        PreparedStatement mystatement3 = myconnection.prepareStatement(q3);
                        
                        mystatement3.setString(1,"Done");
                        //mystatement3.setString(2,dt7);
                        
                        mystatement3.executeUpdate();
                        
                        String q4="insert into account_records(`src_acc_no`, `trans`, `trans_amount`, `trans_med`, `trans_med_details`, `tar_acc_no`, `current_balance`, `date`) values(?,?,?,?,?,?,?,?)";
                
                
                        PreparedStatement mystatement4=myconnection.prepareStatement(q4);

                        mystatement4.setString(1,acc_no);
                        mystatement4.setString(2,"Fixed_Deposit_Interest");
                        mystatement4.setString(3,String.valueOf(int_amt) );
                        mystatement4.setString(4,"-");


                        mystatement4.setString(5,"-");
                        mystatement4.setString(6,"-" );
                        mystatement4.setString(7,String.valueOf(t_amt));

                        java.util.Date cd=new java.util.Date();
                        SimpleDateFormat myf=new SimpleDateFormat("yyyy-MM-dd");
                        String cdate1=myf.format(cd);

                        mystatement4.setString(8,cdate1);

                        mystatement4.executeUpdate();
       
                        
                        
                        String acc_type = myresult.getString("account_type");
                       
                       
                        mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});
                       
                    }
                    while(myresult.next());
                    
                    JOptionPane.showMessageDialog(rootPane,"Interest Added Successfully to all Fixed_Deposit Accounts .");
                }
                
                else
                {
                    JOptionPane.showMessageDialog(rootPane," No Records Found .");
                }
                }
                
                else if(jComboBox1.getSelectedItem().toString().equals("Recurrence_Deposit") && r.equals("Pending"))
                {
                String q = "select * from rd_table where account_type = ? and ( date = ? ) and status = ?";
               
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                
                java.util.Date cdate = new java.util.Date();
                
                SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                
                String dt = myformat.format(cdate);
                String dt1 = myformat.format(jDateChooser1.getDate());
//                String dt2 = myformat.format(jDateChooser2.getDate());
               
                mystatement.setString(1,"Recurrence_Deposit");
                mystatement.setString(2,dt1);
       //         mystatement.setString(3,dt2);
                mystatement.setString(3,"Activated");
                
                
                
                ResultSet myresult = mystatement.executeQuery();
                
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                mymodel.setRowCount(0);
                
                double t_amt = 0 ,int_amt = 0;
                if(myresult.next())
                {
                    do
                    {
                        String date = myresult.getString("date");
                        String acc_no = myresult.getString("account_no");
                        String c_name = myresult.getString("customer_name");
                         t_amt = myresult.getDouble("amount");
                        Double i_rate = myresult.getDouble("interest");
                       
                         int_amt = t_amt * (i_rate/100) ;
                        
                        t_amt = t_amt + int_amt ;
                        
                        String q2 = "update rd_table set amount = ? where account_no = ?";
                        PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                        mystatement2.setString(1, String.valueOf(t_amt));
                        mystatement2.setString(2, acc_no);
                        
                        mystatement2.executeUpdate();
                        
                        
                        String q3 = "update admin_work_sheet set rd = ? where date =  ADDDATE('"+dt7+"',INTERVAL 1 MONTH)";
                        
                        PreparedStatement mystatement3 = myconnection.prepareStatement(q3);
                        
                        mystatement3.setString(1,"Done");
                        //mystatement3.setString(2,dt7);
                        
                        mystatement3.executeUpdate();
                        
                        String q4="insert into account_records(`src_acc_no`, `trans`, `trans_amount`, `trans_med`, `trans_med_details`, `tar_acc_no`, `current_balance`, `date`) values(?,?,?,?,?,?,?,?)";
                
                
                        PreparedStatement mystatement4=myconnection.prepareStatement(q4);

                        mystatement4.setString(1,acc_no);
                        mystatement4.setString(2,"Recurrence_Deposit_Interest");
                        mystatement4.setString(3,String.valueOf(int_amt) );
                        mystatement4.setString(4,"-");


                        mystatement4.setString(5,"-");
                        mystatement4.setString(6,"-" );
                        mystatement4.setString(7,String.valueOf(t_amt));

                        java.util.Date cd=new java.util.Date();
                        SimpleDateFormat myf=new SimpleDateFormat("yyyy-MM-dd");
                        String cdate1=myf.format(cd);

                        mystatement4.setString(8,cdate1);

                        mystatement4.executeUpdate();
       
                        
                        
                        String acc_type = myresult.getString("account_type");
                       
                       
                        mymodel.addRow(new Object[] {date,acc_no,c_name,t_amt,i_rate,acc_type});
                       
                    }
                    while(myresult.next());
                
                    JOptionPane.showMessageDialog(rootPane,"Interest Added Successfully to all Recurrence_Deposit Accounts .");
                }
                
                
                else
                {
                    JOptionPane.showMessageDialog(rootPane," No Records Found .");
                }
                }
                else
                {
                
                    JOptionPane.showMessageDialog(rootPane," Interest already added to Accounts .");
                }
               
                
                
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Query , "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
            
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection , "+e.getMessage());
        }
        }

        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    
    void check()
    {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
            {
                        java.util.Date cdate = new java.util.Date();
                        SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");

                        String dt7 = myformat.format(cdate);
                    
                    String ch = "select * from admin_work_sheet where date  = ?";
                    PreparedStatement mystatementch = myconnection.prepareStatement(ch);
                    mystatementch.setString(1,dt7);
                    
                    ResultSet myresultch = mystatementch.executeQuery();
                    
                    
                    String s = "" , f = "",r="";
                    if(myresultch.next())
                    {
                        s = myresultch.getString("saving");
                        f = myresultch.getString("fd");
                        r = myresultch.getString("rd");
                    }
                    
                       
   
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Query ."+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in connection "+e.getMessage());
        }
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
