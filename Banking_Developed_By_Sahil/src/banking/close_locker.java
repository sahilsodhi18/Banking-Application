/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package banking;
import javax.swing.*;
import java.io.File;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Sahil
 */
public class close_locker extends javax.swing.JInternalFrame implements myvariables
{
    int total_lockers = 0;
    /**
     * Creates new form update_delete_account
     */
    public close_locker() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Close_Locker");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Close_Locker");

        jLabel2.setText("Account_No");

        jButton1.setText("Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Customer_Name");

        jLabel5.setText("Father_Name");

        jLabel6.setText("Mother_Name");

        jLabel7.setText("Gender");

        jLabel8.setText("Occupation");

        jLabel9.setText("Address");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel4.setText("Current_Amount ");

        jLabel10.setText("Phone");

        jLabel11.setText("Email");

        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(java.awt.Color.red);
        jLabel12.setText("*   Mandatory Field");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel13.setForeground(java.awt.Color.red);
        jLabel13.setText("*");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel14.setText("Account_Status");

        jLabel15.setText("Date_Of_Birth");

        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });

        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Locker_No");

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addComponent(jTextField4)
                    .addComponent(jTextField5)
                    .addComponent(jTextField8)
                    .addComponent(jTextField10)
                    .addComponent(jScrollPane2)
                    .addComponent(jTextField7)
                    .addComponent(jTextField11)
                    .addComponent(jTextField12))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel13)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton2)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(jTextField6)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField9))))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        if(jTextField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane,"Please fill Mandatory Field .");
        }
        else
        {
            try
            {
                Connection myconnection ; 
                myconnection=DriverManager.getConnection(path+place,username,password);
               try
               {
                String q="select * from customer_table where account_no = ?";
                
                
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                mystatement.setString(1,jTextField1.getText());
                ResultSet rs = mystatement.executeQuery();
                
                if(rs.next())
                {
         
                String c_name  = rs.getString("customer_name");
                String f_name  = rs.getString("father_name");
                String m_name  = rs.getString("mother_name");
                String gender  = rs.getString("gender");
                String dob  = rs.getString("dob");
                String occ  = rs.getString("occupation");
                String address  = rs.getString("address");
                String ph  = rs.getString("phone");
                String email  = rs.getString("email");
                String c_amt  = rs.getString("total_amount");
                String status  = rs.getString("status");
                
                jLabel16.setIcon(new ImageIcon(ImageIO.read(new File(rs.getString("image_name")))));
                
                jTextField2.setText(c_name);
                jTextField4.setText(f_name);
                jTextField5.setText(m_name);
                jTextField11.setText(gender);
                jTextField12.setText(dob);
                jTextField7.setText(occ);
               
                jTextArea1.setText(address);
                jTextField8.setText(ph);
                jTextField10.setText(email);
                jTextField6.setText(status);
                jTextField3.setText(c_amt); 
                
                
                 String q2="select * from locker_table where account_no = ?";
                
                
                PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                mystatement2.setString(1,jTextField1.getText());
                ResultSet rs2 = mystatement2.executeQuery();
                
                if(rs2.next())
                {
         
                String ln  = rs2.getString("locker_no");
                 jTextField9.setText(ln); 
                }
                
                }
               
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(jTextField1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane,"Please fill Mandatory Field .");
        }
        else
        {
            try
            {
                Connection myconnection ; 
                myconnection=DriverManager.getConnection(path+place,username,password);
               try
               {
                String q="select * from customer_table where account_no = ?";
                
                
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                mystatement.setString(1,jTextField1.getText());

                ResultSet rs = mystatement.executeQuery();
                    
                    String status = "";
                    int c_amt = 0;
                    if(rs.next())
                    {

                     c_amt  = rs.getInt("total_amount");
                     status  = rs.getString("status");
                    

                    }
                    
                    
                    
                        if(status.equals("Deactivated") )
                        {
                            JOptionPane.showConfirmDialog(rootPane,"This Account is not Activated .","Cannot Locker .",JOptionPane.CANCEL_OPTION,JOptionPane.ERROR_MESSAGE);
                        }
                        else if( c_amt <= 500)
                        {
                            JOptionPane.showConfirmDialog(rootPane,"This Account is having less than Rs. 500 ","Cannot Issue Locker .",JOptionPane.CANCEL_OPTION,JOptionPane.ERROR_MESSAGE);
                        }
                        else
                        {
                         String q2 = "update locker_table set account_no = ? , issue_date = ?  ,status = ? where locker_no = ? ";

                         PreparedStatement mystatement2 = myconnection.prepareStatement(q2);

                         mystatement2.setString(1,null);
                         
                         mystatement2.setString(4, jTextField9.getText());

                         java.util.Date cd = new java.util.Date();
                         SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                         String cdate = myformat.format(cd);

                         /*Calendar cal = Calendar.getInstance();
                         cal.add(Calendar.YEAR,1);*/

                         mystatement2.setString(2,null);
                         
                     
                         
                         mystatement2.setString(3,"Available");
                         mystatement2.executeUpdate();

                         JOptionPane.showMessageDialog(rootPane,"Locker has been Closed .");
                         
                        /* String q3 = "update customer_table set atm_card_no = ? where account_no = ?";

                         PreparedStatement mystatement3 = myconnection.prepareStatement(q3);

                         mystatement3.setString(1,jTextField9.getText());
                         mystatement3.setString(2,jTextField1.getText());

                         mystatement3.executeUpdate();
                                */
                         
                      /*   String q4="select * from locker_table ";
                
                
                        PreparedStatement mystatement4 = myconnection.prepareStatement(q4);
                        
                       // mystatement4.setString(1,jTextField1.getText());

                        ResultSet rs4 = mystatement4.executeQuery();

                            int a_lockers = 0;

                            if(rs4.next())
                            {

                              a_lockers = rs.getInt("available_lockers");
                              
                            }
                            
                            a_lockers--;
                            

                         
                         
                        String q3 = "update general_records set avaiable_lockers = ?";

                         PreparedStatement mystatement3 = myconnection.prepareStatement(q3);

                         
                         mystatement3.setString(1,String.valueOf(a_lockers));

                         mystatement3.executeUpdate();
                        */ 
                                                 
                         
                         
                         jTextField1.setText("");
                         jLabel16.setText("");
                        jTextField2.setText("");
                        jTextField4.setText("");
                        jTextField5.setText("");
                        jTextField11.setText("");
                        jTextField12.setText("");
                        jTextField7.setText("");
                         jTextField9.setText(""); 
                        jTextArea1.setText("");
                        jTextField8.setText("");
                        jTextField10.setText("");
                        jTextField6.setText("");
                        jTextField3.setText(""); 
                        jLabel16.setIcon(null);
                       
                        //generate_locker_no();
                   
                        }
                    
               
               
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
     
        //generate_locker_no();
        /*
        
            try
            {
                Connection myconnection ; 
                myconnection=DriverManager.getConnection(path+place,username,password);
               try
               {
                String q="select * from general_records";
                
                
                PreparedStatement mystatement = myconnection.prepareStatement(q);
               
                ResultSet rs = mystatement.executeQuery();
                    
                    int a_l = 0;
                    
                    if(rs.next())
                    {
                         a_l = rs.getInt("available_lockers");
                         total_lockers = rs.getInt("total_lockers");
                    
                    }
                  
                    if(a_l < 0 )
                    {
                        JOptionPane.showMessageDialog(rootPane,"No Locker is available");
                       
                    }
                    
                    else 
                    {
                        generate_locker_no();
                    }
               
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
            }
       */
        
        
    }//GEN-LAST:event_formInternalFrameActivated
/*
    void generate_locker_no()
    {
    try
            {
                Connection myconnection ; 
                myconnection=DriverManager.getConnection(path+place,username,password);
               try
               {
               /* String q="select * from general_records";
                
                
                PreparedStatement mystatement = myconnection.prepareStatement(q);
               
                ResultSet rs = mystatement.executeQuery();
                    
                    int a_l = 0;
                    
                    if(rs.next())
                    {
                         a_l = rs.getInt("available_lockers");
                         total_lockers = rs.getInt("total_lockers");
                    
                    }
                  
                    if(a_l < 0 )
                    {
                        JOptionPane.showMessageDialog(rootPane,"No Locker is available");
                       
                    }
                    else
                    {
*//*                        String q2="select * from locker_table where status  = ?";
                
                
                        PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                        mystatement2.setString(1,"Available");
                        ResultSet rs2 = mystatement2.executeQuery();
                        
                        if(rs2.next())
                        {
                            int locker_no = rs2.getInt("locker_no");
                            jTextField9.setText(String.valueOf(locker_no));
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane,"No Locker is available");
                        }
               /*     a_l = 0;
                    
                    if(rs.next())
                    {
                         a_l = rs.getInt("available_lockers");
                         total_lockers = rs.getInt("total_lockers");
                    
                    }
                  
                    if(a_l < 0 )
                    {
                        JOptionPane.showMessageDialog(rootPane,"No Locker is available");
                       
                    }
                 
                    
                    
       }*/
                    
               
    /*            }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
            }
    }
    /*
    void generate_locker_no()
    {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
            {
                String q2 = "select * from locker_table";
                
                PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
                ResultSet myresult2 = mystatement2.executeQuery();
                
                String status = "";
                int locker_no = 0;
                
                if(myresult2.next())
                {
                    status = myresult2.getString("status");
                    locker_no = myresult2.getInt("locker_no");
                }
                
                if(status.equals("Avaiable"))
                {
                    jTextField9.setText(String.valueOf(locker_no));
                }
                else
                {
                
                String q = "select max(locker_no) from locker_table";
                
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                ResultSet myresult = mystatement.executeQuery();
                
                if(myresult.next())
                {
                     locker_no = myresult.getInt(1);
                    
                    if(locker_no < total_lockers)
                    {
                        jTextField9.setText(String.valueOf(++locker_no));
                    }
                   
                }
                else
                {
                    jTextField9.setText("1");
               }
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in connection "+e.getMessage());
        }
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
